{"version":3,"sources":["services/personService.js","services/loginService.js","components/InputField.js","components/PersonForm.js","components/PersonList.js","components/Message.js","components/LoginForm.js","helper/helper.js","services/userService.js","pages/SignupPage/SignupPage.jsx","pages/EditContactPage/EditContactPage.jsx","App.js","index.js"],"names":["baseUrl","token","personService","getAll","config","headers","Authorization","axios","get","then","response","data","create","newObject","post","deleteEntry","id","delete","update","put","setToken","newToken","login","credentials","a","InputField","field","Form","Group","Label","title","Control","type","placeholder","value","onChange","changeHandler","PersonForm","submitHandler","fields","onSubmit","Row","Col","name","number","Button","PersonList","persons","deleteEntryOf","history","useHistory","Table","striped","bordered","hover","map","person","variant","size","onClick","push","className","Message","message","messageType","Alert","LoginForm","event","username","password","setValue","target","signup","newUser","SignupPage","useState","setUsername","firstName","setFirstName","lastName","setLastName","setPassword","duplicatePassword","setDuplicatePassword","setMessage","preventDefault","userService","catch","error","EditContactPage","setPersons","displayMessage","useParams","find","p","editedName","setEditedName","editedNumber","setEditedNumber","editedPerson","updatedPerson","messageText","App","newName","setNewName","newNumber","setNewNumber","filterStr","setFilterStr","setMessageType","user","setUser","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","initialPersons","personsToShow","filter","toLowerCase","indexOf","setTimeout","handleLogin","loginService","userInfo","setItem","stringify","newContactFields","loginFields","filterField","padding","Container","style","to","removeItem","path","newEntry","newPerson","concat","console","log","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dacbe22.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = '/api/contacts';\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n    return axios.get(baseUrl, config).then(response => response.data)\n  }\n\nconst create = newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  return axios.post(baseUrl, newObject, config).then(response => response.data)\n}  \n\nconst deleteEntry = id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  return axios.delete(`${baseUrl}/${id}`, config).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = axios.put(`${baseUrl}/${id}`, newObject, config)\n  return request.then(response => response.data)\n}\n\nconst personService = {\n    getAll, \n    create,\n    deleteEntry,\n    update,\n    setToken,\n}\n\nexport default personService;","import axios from 'axios'\nconst baseUrl = '/api/auth'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import Form from 'react-bootstrap/Form'\n\nconst InputField = ({field}) => (\n  <Form.Group>\n      <Form.Label> {field.title} </Form.Label>\n      <Form.Control type={field.type} placeholder={field.placeholder} value={field.value} onChange={field.changeHandler}></Form.Control>\n  </Form.Group>\n)\n\nexport default InputField","import Form from 'react-bootstrap/Form';\nimport { Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport InputField from './InputField'\n\nconst PersonForm = ({ submitHandler, fields }) => {\n  return(\n    <Form onSubmit={submitHandler}>\n\n      <Row>\n        <Col>\n          <InputField field={fields.name} />\n        </Col>\n        <Col>\n          <InputField field={fields.number} />\n        </Col>\n      </Row>\n      \n        <Button type=\"submit\">Add</Button>\n      \n    </Form>\n  )\n}\n\nexport default PersonForm","import { Table } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router';\n\nconst PersonList = ({persons, deleteEntryOf}) => {\n  const history = useHistory();\n  return (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {persons.map((person) => (\n          <tr key={person.id}>\n            <td>{person.name}</td>\n            <td>{person.number} </td>\n            <td>\n              <Button variant=\"info\" size=\"sm\" onClick={() => history.push(`/contacts/edit/${person.id}`)}>\n                Edit\n              </Button>  \n              <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteEntryOf(person.id)}>\n                <i className=\"bi bi-x\"></i>Delete\n              </Button>  \n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default PersonList","import { Alert } from \"react-bootstrap\";\n\nconst Message = ({message, messageType}) => {\n    if (message === null) {\n        return null;\n    }\n\n    return(\n        <Alert variant={messageType}>\n            {message}\n        </Alert>\n        \n    )\n}\n\nexport default Message;","import Form from 'react-bootstrap/Form';\nimport { Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport InputField from './InputField'\nimport { useHistory } from 'react-router';\n\nconst LoginForm = ({ submitHandler, fields }) => {\n  const history = useHistory();\n\n  const onSubmit = (event) => {\n      submitHandler(event).then(() => history.push('/'))\n  }\n\n\n  return(\n    \n    <div>\n      <Form onSubmit={onSubmit}>\n        <Row>\n          <Col>\n            <InputField field={fields.username} />\n          </Col>\n          <Col>\n            <InputField field={fields.password} />\n          </Col>\n        </Row>\n      \n          <Button type=\"submit\">Login</Button>\n          <Button type=\"button\" variant=\"info\" onClick={() => history.push('/signup')}>Sign Up</Button>\n      \n      </Form>\n    </div>\n  )\n}\n\nexport default LoginForm","export const changeHandler = (setValue) => {\n    return (event) => {\n      setValue(event.target.value)\n    }\n  }\n\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\n\nconst signup = newUser => {\n    return axios.post(baseUrl, newUser).then(response => response.data)\n} \n\nexport default signup","import Form from 'react-bootstrap/Form';\nimport { Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { useHistory } from 'react-router';\nimport { useState } from 'react';\nimport { changeHandler } from '../../helper/helper';\nimport userService from '../../services/userService';\n\nimport Message from '../../components/Message'\nimport InputField from '../../components/InputField'\n\nconst SignupPage = () => {\n    const [username, setUsername] = useState('')\n    const [firstName, setFirstName] = useState('')\n    const [lastName, setLastName] = useState('')\n    const [password, setPassword] = useState('')\n    const [duplicatePassword, setDuplicatePassword] = useState('')\n    const [message, setMessage] = useState(null)\n    const history = useHistory()\n\n    const fields = {\n        username: {\n          title: 'Username',\n          value: username,\n          changeHandler: changeHandler(setUsername),\n          type: 'text',\n          placeholder: 'Enter your user name'\n        },\n        firstName: {\n            title: 'First Name',\n            value: firstName,\n            changeHandler: changeHandler(setFirstName),\n            type: 'text',\n            placeholder: 'Enter your user name'\n        },\n        lastName: {\n            title: 'Last Name',\n            value: lastName,\n            changeHandler: changeHandler(setLastName),\n            type: 'text',\n            placeholder: 'Enter your user name'\n          },\n        password: {\n          title: 'Password',\n          value: password,\n          changeHandler: changeHandler(setPassword),\n          type: 'password',\n          placeholder: 'Enter your password'\n        },\n        duplicatePassword: {\n            title: 'Repeat Password',\n            value: duplicatePassword,\n            changeHandler: changeHandler(setDuplicatePassword),\n            type: 'password',\n            placeholder: 'Repeat password'\n          },\n      }\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        if(password !== duplicatePassword) {\n            setMessage('Passwords do not match')\n            return\n        }\n        const newUser = {\n            username, firstName, lastName, password\n        }\n        userService.signup(newUser).then(() => history.push('/login')).catch( error => {\n            setMessage(error.response.data.error)\n        })\n    }\n\n    return (\n        <div>\n            <Form onSubmit={onSubmit}>\n                <Row>\n                    <Col>\n                        <InputField field={fields.username} />\n                    </Col>\n                    <Col>\n                        <InputField field={fields.firstName} />\n                    </Col>\n                    <Col>\n                        <InputField field={fields.lastName} />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <InputField field={fields.password} />\n                    </Col>\n                    <Col>\n                        <InputField field={fields.duplicatePassword} />\n                    </Col>\n                </Row>\n                \n                <Button type=\"submit\">Sign Up</Button>\n        \n            </Form>\n            <Message message={message} messageType='danger' />\n        </div>\n        \n    )\n}\n\nexport default SignupPage","import { useHistory, useParams } from \"react-router\"\nimport { Form, Row, Col, Button } from \"react-bootstrap\"\nimport { useState } from \"react\"\n\nimport InputField from \"../../components/InputField\"\nimport { changeHandler } from \"../../helper/helper\"\n\n\n\nconst EditContactPage = ({persons, setPersons, displayMessage, personService}) => {\n    const history = useHistory()\n    const id = useParams().id\n    const person = persons.find(p => p.id === id)\n    const [editedName, setEditedName] = useState(person.name)\n    const [editedNumber, setEditedNumber] = useState(person.number)\n\n    const fields = {\n        name: {\n          id: 1,\n          title: 'Name',\n          value: editedName,\n          changeHandler: changeHandler(setEditedName),\n          type: 'text',\n        },\n        number: {\n          id: 2,\n          title: 'Number',\n          value: editedNumber,\n          changeHandler: changeHandler(setEditedNumber),\n          type: 'text',\n        }\n    }\n\n    const submitHandler = async (event) => {\n        event.preventDefault()\n\n        try{\n            const editedPerson = {\n                name: editedName,\n                number: editedNumber\n            }\n            const updatedPerson = await personService.update(id, editedPerson)\n            setPersons(persons.map((person) => {\n                return person.id === updatedPerson.id ? updatedPerson : person;\n            }));\n            let messageText = `${updatedPerson.name}'s number updated`\n            displayMessage(messageText, 'success')\n            history.push('/contacts')\n        }catch(error){\n            displayMessage(error.response.data.error, 'danger')\n        }\n\n    }\n\n    return(\n        <Form onSubmit={submitHandler}>\n\n            <Row>\n                <Col>\n                    <InputField field={fields.name} />\n                </Col>\n                <Col>\n                    <InputField field={fields.number} />\n                </Col>\n            </Row>\n      \n        <Button type=\"submit\">Save</Button>\n      \n    </Form>\n    )\n}\n\nexport default EditContactPage","import './index.css'\n\nimport React, { useEffect, useState } from 'react'\n\nimport {\n  Switch, Route, Link, Redirect\n} from \"react-router-dom\"\n\nimport Container from 'react-bootstrap/Container';\n\nimport personService from './services/personService'\nimport loginService from './services/loginService'\nimport PersonForm from './components/PersonForm'\nimport InputField from './components/InputField'\nimport PersonList from './components/PersonList'\nimport Message from './components/Message'\nimport LoginForm from './components/LoginForm';\nimport AppNavBar from './components/AppNavBar';\nimport { changeHandler } from './helper/helper';\nimport SignupPage from './pages/SignupPage/SignupPage';\nimport EditContactPage from './pages/EditContactPage/EditContactPage';\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterStr, setFilterStr ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedPhonebookAppUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      personService.setToken(user.token)\n    }\n  }, [])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( initialPersons => setPersons(initialPersons))\n  }, [user]);\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().indexOf(filterStr.toLowerCase()) !== -1);\n\n  const displayMessage = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(()=>{\n      setMessage(null)\n    }, 3000);\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault();\n    \n    const newEntry = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newEntry)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson));\n        let messageText = `${newPerson.name} successfully added`\n        displayMessage(messageText, 'success')\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        console.log(error)\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'danger')\n      });\n  }\n\n  const deleteEntryOf = (id) => {\n    const deleteConsent = window.confirm(`Delete ${persons.find((person)=>person.id === id).name}?`)\n    if(!deleteConsent) return;\n    personService\n      .deleteEntry(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      }).catch((error)=>{\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'danger')\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterStrChange = (event) => {\n    setFilterStr(event.target.value);\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const userInfo = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedPhonebookAppUser', JSON.stringify(userInfo)\n      ) \n      personService.setToken(userInfo.token)\n      setUser(userInfo)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      displayMessage('Wrong Credentials', 'danger')\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedPhonebookAppUser')\n    setUser(null)\n    setPersons([])\n  }\n\n  const newContactFields = {\n    name: {\n      id: 1,\n      title: 'Name',\n      value: newName,\n      changeHandler: handleNameChange,\n      type: 'text',\n      placeholder: 'Enter Contact Name'\n    },\n    number: {\n      id: 2,\n      title: 'Number',\n      value: newNumber,\n      changeHandler: handleNumberChange,\n      type: 'text',\n      placeholder: 'Enter Phone Number'\n    }\n  }\n\n  const loginFields = {\n    username: {\n      title: 'Username',\n      value: username,\n      changeHandler: changeHandler(setUsername),\n      type: 'text',\n      placeholder: 'Enter your user name'\n    },\n    password: {\n      title: 'Password',\n      value: password,\n      changeHandler: changeHandler(setPassword),\n      type: 'password',\n      placeholder: 'Enter your password'\n    }\n  }\n\n  const filterField = {\n    title: 'Search',\n    value: filterStr,\n    changeHandler: handleFilterStrChange,\n    type: 'text',\n  }\n\n  const padding = { padding: 5 }\n\n  return (\n    <Container >\n        {/* {\n          user\n          ? <AppNavBar user= {user} />\n          : null\n        } */}\n        <div>\n          <Link style={padding} to=\"/\">home</Link>\n          <Link style={padding} to=\"/contacts\">contacts</Link>\n          <Link style={padding} to=\"/contacts/add\">add contacts</Link>\n          \n          { user && <em>{user.username} logged in</em> \n          }\n          {\n            user ? <Link style={padding} to=\"/login\" onClick={handleLogout}>logout</Link>\n            : <Link style={padding} to=\"/login\">login</Link>\n          }\n          \n    </div>\n        <Message message={message} messageType={messageType}/>\n        <Switch>\n          <Route path=\"/signup\">\n            <SignupPage />\n          </Route>\n          <Route path=\"/contacts/edit/:id\">\n            <EditContactPage personService={personService} displayMessage={displayMessage} persons={persons} setPersons={setPersons}/>\n          </Route>\n          <Route path=\"/contacts/add\">\n          {!user ? <Redirect to=\"/login\" /> : null}\n            <PersonForm submitHandler={addEntry} fields={newContactFields} />\n          </Route>\n          <Route path=\"/contacts\">\n          {!user ? <Redirect to=\"/login\" /> : null}\n            <h2>Contacts</h2>\n            <InputField field={filterField}/>\n            <PersonList persons={personsToShow} deleteEntryOf={deleteEntryOf} />\n          </Route>\n          <Route path=\"/login\">\n            <LoginForm submitHandler={handleLogin} fields={loginFields}/>\n          </Route>\n          <Route path=\"/\">\n          {!user \n            ? <Redirect to=\"/login\" /> \n            : <Redirect to=\"/contacts\" />}\n          </Route>\n        </Switch>\n    </Container>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\nimport { BrowserRouter as Router } from 'react-router-dom'\n \n\nReactDOM.render(\n  <Router >\n    <App />\n  </Router>\n  , \n  document.getElementById('root')\n)"],"sourceRoot":""}