{"version":3,"sources":["services/personService.js","components/InputField.js","components/PersonForm.js","components/PersonList.js","components/Message.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","deleteEntry","id","delete","update","put","InputField","field","Form","Group","Label","title","Control","type","placeholder","value","onChange","changeHandler","PersonForm","submitHandler","fields","onSubmit","Row","Col","name","number","Button","PersonList","persons","deleteEntryOf","Table","striped","bordered","hover","map","person","variant","size","onClick","className","Message","message","messageType","Alert","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterStr","setFilterStr","setMessage","setMessageType","useEffect","initialPersons","personsToShow","filter","toLowerCase","indexOf","displayMessage","setTimeout","event","target","filterField","Container","preventDefault","some","oldEntry","find","alert","window","confirm","updatedEntry","updatedPerson","messageText","catch","error","newEntry","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.797b5c74.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = '/api/contacts';\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n  }\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}  \n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst personService = {\n    getAll, \n    create,\n    deleteEntry,\n    update\n}\n\nexport default personService;","import Form from 'react-bootstrap/Form'\n\nconst InputField = ({field}) => (\n  <Form.Group>\n      <Form.Label> {field.title} </Form.Label>\n      <Form.Control type={field.type} placeholder={field.placeholder} value={field.value} onChange={field.changeHandler}></Form.Control>\n  </Form.Group>\n)\n\nexport default InputField","import Form from 'react-bootstrap/Form';\nimport { Row } from 'react-bootstrap';\nimport { Col } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport InputField from './InputField'\n\nconst PersonForm = ({ submitHandler, fields }) => {\n  return(\n    <Form onSubmit={submitHandler}>\n\n      <Row>\n        <Col>\n          <InputField field={fields.name} />\n        </Col>\n        <Col>\n          <InputField field={fields.number} />\n        </Col>\n      </Row>\n      \n        <Button type=\"submit\">Add</Button>\n      \n    </Form>\n  )\n}\n\nexport default PersonForm","import { Table } from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\n\nconst PersonList = ({persons, deleteEntryOf}) => (\n    <Table striped bordered hover>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Number</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {persons.map((person) => (\n          <tr key={person.id}>\n            <td>{person.name}</td>\n            <td>{person.number} </td>\n            <td>\n              <Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteEntryOf(person.id)}>\n                <i className=\"bi bi-x\"></i>Delete\n              </Button>  \n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n)\n\nexport default PersonList","import { Alert } from \"react-bootstrap\";\n\nconst Message = ({message, messageType}) => {\n    if (message === null) {\n        return null;\n    }\n\n    return(\n        <Alert variant={messageType}>\n            {message}\n        </Alert>\n        \n    )\n}\n\nexport default Message;","import './index.css'\n\nimport React, { useEffect, useState } from 'react'\n\nimport Container from 'react-bootstrap/Container';\n\nimport personService from './services/personService'\nimport PersonForm from './components/PersonForm'\nimport InputField from './components/InputField'\nimport PersonList from './components/PersonList'\nimport Message from './components/Message'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterStr, setFilterStr ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState('');\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( initialPersons => setPersons(initialPersons))\n  }, []);\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().indexOf(filterStr.toLowerCase()) !== -1);\n\n  const displayMessage = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(()=>{\n      setMessage(null)\n    }, 3000);\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault();\n    if(persons.some((person) => person.name === newName)) {\n      const oldEntry = persons.find((person)=> person.name === newName);\n      if(oldEntry.number === newNumber) {\n        alert(`${newName} has already been added to the phonebook`);\n        return;\n      } \n      const updateConsent = window.confirm(`${newName} is already in the phonebook, would you like to replace their old one with the new one?`)\n      if(!updateConsent) return;\n      const updatedEntry = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .update(oldEntry.id, updatedEntry)\n        .then(updatedPerson => {\n          setPersons(persons.map((person) => {\n            return person.id === updatedPerson.id ? updatedPerson : person;\n          }));\n          let messageText = `${updatedPerson.name}'s number updated`\n          displayMessage(messageText, 'success')\n          setNewName('');\n          setNewNumber('');\n        }).catch((error)=>{\n          let messageText = error.response.data.error;\n          displayMessage(messageText, 'danger')\n        })\n      return;\n    }\n    const newEntry = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newEntry)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson));\n        let messageText = `${newPerson.name} successfully added`\n        displayMessage(messageText, 'success')\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'danger')\n      });\n  }\n\n  const deleteEntryOf = (id) => {\n    const deleteConsent = window.confirm(`Delete ${persons.find((person)=>person.id === id).name}?`)\n    if(!deleteConsent) return;\n    personService\n      .deleteEntry(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      }).catch((error)=>{\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'danger')\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterStrChange = (event) => {\n    setFilterStr(event.target.value);\n  }\n\n  const fields = {\n    name: {\n      id: 1,\n      title: 'Name',\n      value: newName,\n      changeHandler: handleNameChange,\n      type: 'text',\n      placeholder: 'Enter Contact Name'\n    },\n    number: {\n      id: 2,\n      title: 'Number',\n      value: newNumber,\n      changeHandler: handleNumberChange,\n      type: 'text',\n      placeholder: 'Enter Phone Number'\n    }\n  }\n\n  const filterField = {\n    title: 'Search',\n    value: filterStr,\n    changeHandler: handleFilterStrChange,\n    type: 'text',\n  }\n\n  return (\n    <Container >\n      <h2>Phonebook</h2>\n      <Message message={message} messageType={messageType}/>\n      <PersonForm submitHandler={addEntry} fields={fields} />\n      <h2>Contacts</h2>\n      <InputField field={filterField}/>\n      <PersonList persons={personsToShow} deleteEntryOf={deleteEntryOf} />\n      \n    </Container>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}