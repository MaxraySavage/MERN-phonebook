{"version":3,"sources":["services/personService.js","components/InputField.js","components/PersonForm.js","components/PersonList.js","components/Message.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","create","newObject","post","deleteEntry","id","delete","update","put","InputField","field","title","value","onChange","changeHandler","PersonForm","submitHandler","fields","onSubmit","map","type","PersonList","persons","deleteEntryOf","person","name","number","onClick","Message","message","messageType","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filterStr","setFilterStr","setMessage","setMessageType","useEffect","initialPersons","personsToShow","filter","toLowerCase","indexOf","displayMessage","setTimeout","event","target","filterField","preventDefault","some","oldEntry","find","alert","window","confirm","updatedEntry","updatedPerson","catch","error","messageText","newEntry","newPerson","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b8bb98c.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = '/api/people';\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n  }\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject).then(response => response.data)\n}  \n\nconst deleteEntry = id => {\n  return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst personService = {\n    getAll, \n    create,\n    deleteEntry,\n    update\n}\n\nexport default personService;","const InputField = ({field}) => (\n    <div>\n        {`${field.title}: `} \n        <input \n          value={field.value}\n          onChange={field.changeHandler}  \n        />\n      </div>\n)\n\nexport default InputField","import InputField from './InputField'\n\nconst PersonForm = ({ submitHandler, fields }) => {\n  return(\n    <form onSubmit={submitHandler}>\n      {fields.map((field) => (\n        <InputField key={field.id} field={field} />\n      ))}\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","const PersonList = ({persons, deleteEntryOf}) => (\n    <ul>\n        {persons.map((person) => (\n          <li key={person.id}>\n            {person.name} {person.number} \n            <button onClick={() => deleteEntryOf(person.id)}>Delete</button>  \n          </li>\n        ))}\n    </ul>\n)\n\nexport default PersonList","const Message = ({message, messageType}) => {\n    if (message === null) {\n        return null;\n    }\n\n    return(\n        <div className={messageType}>\n            {message}\n        </div>\n    )\n}\n\nexport default Message;","import './index.css'\n\nimport React, { useEffect, useState } from 'react'\nimport personService from './services/personService'\nimport PersonForm from './components/PersonForm'\nimport InputField from './components/InputField'\nimport PersonList from './components/PersonList'\nimport Message from './components/Message'\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]); \n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ filterStr, setFilterStr ] = useState('');\n  const [ message, setMessage ] = useState('');\n  const [ messageType, setMessageType ] = useState('');\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then( initialPersons => setPersons(initialPersons))\n  }, []);\n\n  const personsToShow = persons.filter((person) => person.name.toLowerCase().indexOf(filterStr.toLowerCase()) !== -1);\n\n  const displayMessage = (message, type) => {\n    setMessage(message);\n    setMessageType(type);\n    setTimeout(()=>{\n      setMessage(null)\n    }, 3000);\n  }\n\n  const addEntry = (event) => {\n    event.preventDefault();\n    if(persons.some((person) => person.name === newName)) {\n      const oldEntry = persons.find((person)=> person.name === newName);\n      if(oldEntry.number === newNumber) {\n        alert(`${newName} has already been added to the phonebook`);\n        return;\n      } \n      const updateConsent = window.confirm(`${newName} is already in the phonebook, would you like to replace their old one with the new one?`)\n      if(!updateConsent) return;\n      const updatedEntry = {\n        name: newName,\n        number: newNumber\n      }\n      personService\n        .update(oldEntry.id, updatedEntry)\n        .then(updatedPerson => {\n          setPersons(persons.map((person) => {\n            return person.id === updatedPerson.id ? updatedPerson : person;\n          }));\n          setMessage(`${updatedPerson.name}'s number updated`);\n          setMessageType('success');\n          setTimeout(()=>{\n            setMessage(null)\n          }, 3000);\n          setNewName('');\n          setNewNumber('');\n        }).catch((error)=>{\n          let messageText = error.response.data.error;\n          displayMessage(messageText, 'error')\n        })\n      return;\n    }\n    const newEntry = {\n      name: newName,\n      number: newNumber\n    }\n\n    personService\n      .create(newEntry)\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson));\n        setMessage(`${newPerson.name} successfully added`);\n        setMessageType('success');\n        setTimeout(()=>{\n          setMessage(null)\n        }, 3000);\n        setNewName('');\n        setNewNumber('');\n      })\n      .catch(error => {\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'error')\n      });\n  }\n\n  const deleteEntryOf = (id) => {\n    const deleteConsent = window.confirm(`Delete ${persons.find((person)=>person.id === id).name}?`)\n    if(!deleteConsent) return;\n    personService\n      .deleteEntry(id)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      }).catch((error)=>{\n        const messageText = error.response.data.error\n        displayMessage(messageText, 'error')\n      })\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleFilterStrChange = (event) => {\n    setFilterStr(event.target.value);\n  }\n\n  const fields = [\n    {\n      id: 1,\n      title: 'name',\n      value: newName,\n      changeHandler: handleNameChange\n    },\n    {\n      id: 2,\n      title: 'number',\n      value: newNumber,\n      changeHandler: handleNumberChange\n    }\n  ]\n\n  const filterField = {\n    title: 'Search',\n    value: filterStr,\n    changeHandler: handleFilterStrChange\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} messageType={messageType}/>\n      <PersonForm submitHandler={addEntry} fields={fields} />\n      <h2>Contacts</h2>\n      <InputField field={filterField}/>\n      <PersonList persons={personsToShow} deleteEntryOf={deleteEntryOf} />\n      \n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}